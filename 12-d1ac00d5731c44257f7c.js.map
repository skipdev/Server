{"version":3,"sources":["webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/react-vertical-timeline-component/dist-es6/index.js","webpack:///./node_modules/react-vertical-timeline-component/dist-es6/VerticalTimeline.js","webpack:///./node_modules/react-vertical-timeline-component/dist-es6/VerticalTimelineElement.js","webpack:///./node_modules/react-visibility-sensor/visibility-sensor.js","webpack:///./node_modules/create-react-class/index.js","webpack:///./node_modules/create-react-class/factory.js","webpack:///./node_modules/fbjs/lib/emptyObject.js","webpack:///./node_modules/fbjs/lib/invariant.js","webpack:///./node_modules/react-visibility-sensor/lib/is-visible-with-offset.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","undefined","VerticalTimeline","__webpack_require__","VerticalTimelineElement","Object","defineProperty","value","_react2","_interopRequireDefault","_propTypes2","_classnames2","obj","__esModule","_ref","animate","children","className","layout","createElement","vertical-timeline--animate","vertical-timeline--two-columns","vertical-timeline--one-column","propTypes","oneOfType","arrayOf","node","isRequired","string","bool","oneOf","defaultProps","_extends","assign","target","source","prototype","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","_reactVisibilitySensor2","_Component","instance","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","onVisibilitySensorChange","bind","state","visible","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","isVisible","setState","_props","id","icon","iconStyle","iconOnClick","date","position","style","visibilitySensorProps","vertical-timeline-element--left","vertical-timeline-element--right","vertical-timeline-element--no-children","onChange","onClick","element","shape","func","partialVisibility","offset","bottom","React","ReactDOM","PropTypes","createReactClass","isVisibleWithOffset","containmentPropType","any","window","instanceOf","Element","displayName","active","delayedCall","top","number","left","right","direction","scrollCheck","scrollDelay","scrollThrottle","resizeCheck","resizeDelay","resizeThrottle","intervalCheck","intervalDelay","containment","minTopValue","getDefaultProps","getInitialState","visibilityRect","componentDidMount","findDOMNode","startWatching","componentWillUnmount","stopWatching","componentDidUpdate","prevProps","getContainer","addEventListener","event","delay","throttle","timeout","debounceCheck","later","check","info","fn","setTimeout","clearTimeout","getLastTimeout","interval","setInterval","debounceEvent","debounceInfo","removeEventListener","clearInterval","roundRectDown","rect","Math","floor","containmentRect","el","width","height","normalizeRect","getBoundingClientRect","containmentDOMRect","innerHeight","document","documentElement","clientHeight","innerWidth","clientWidth","hasSize","partialVisible","console","warn","render","Function","Children","only","factory","Error","ReactNoopUpdateQueue","updater","isValidElement","_assign","emptyObject","_invariant","MIXINS_KEY","ReactComponent","injectedMixins","ReactClassInterface","mixins","statics","contextTypes","childContextTypes","getChildContext","componentWillMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","updateComponent","ReactClassStaticInterface","getDerivedStateFromProps","RESERVED_SPEC_KEYS","mixSpecIntoComponent","createMergedResultFunction","name","property","isReserved","isAlreadyDefined","specPolicy","mixStaticSpecIntoComponent","autobind","validateMethodOverride","ReactClassMixin","spec","proto","autoBindPairs","__reactAutoBindPairs","isReactClassMethod","createChainedFunction","mergeIntoWithNoDuplicateKeys","one","two","a","b","c","bindAutoBindMethod","component","method","IsMountedPreMixin","__isMounted","IsMountedPostMixin","replaceState","newState","callback","enqueueReplaceState","isMounted","ReactClassComponent","context","pairs","autoBindKey","bindAutoBindMethods","refs","initialState","methodName","forEach","validateFormat","format","condition","d","e","f","error","args","argIndex","replace","framesToPop","offsetDir","offsetVal"],"mappings":"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","file":"12-d1ac00d5731c44257f7c.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","'use strict';\n\n// this should be the entry point to your library\nmodule.exports = {\n  VerticalTimeline: require('./VerticalTimeline').default, // eslint-disable-line global-require\n  VerticalTimelineElement: require('./VerticalTimelineElement').default // eslint-disable-line global-require\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VerticalTimeline = function VerticalTimeline(_ref) {\n  var animate = _ref.animate,\n      children = _ref.children,\n      className = _ref.className,\n      layout = _ref.layout;\n  return _react2.default.createElement(\n    'div',\n    {\n      className: (0, _classnames2.default)(className, 'vertical-timeline', {\n        'vertical-timeline--animate': animate,\n        'vertical-timeline--two-columns': layout === '2-columns',\n        'vertical-timeline--one-column': layout === '1-column'\n      })\n    },\n    children\n  );\n};\n\nVerticalTimeline.propTypes = {\n  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]).isRequired,\n  className: _propTypes2.default.string,\n  animate: _propTypes2.default.bool,\n  layout: _propTypes2.default.oneOf(['1-column', '2-columns'])\n};\n\nVerticalTimeline.defaultProps = {\n  animate: true,\n  className: '',\n  layout: '2-columns'\n};\n\nexports.default = VerticalTimeline;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactVisibilitySensor = require('react-visibility-sensor');\n\nvar _reactVisibilitySensor2 = _interopRequireDefault(_reactVisibilitySensor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VerticalTimelineElement = function (_Component) {\n  _inherits(VerticalTimelineElement, _Component);\n\n  function VerticalTimelineElement(props) {\n    _classCallCheck(this, VerticalTimelineElement);\n\n    var _this = _possibleConstructorReturn(this, (VerticalTimelineElement.__proto__ || Object.getPrototypeOf(VerticalTimelineElement)).call(this, props));\n\n    _this.onVisibilitySensorChange = _this.onVisibilitySensorChange.bind(_this);\n    _this.state = { visible: false };\n    return _this;\n  }\n\n  _createClass(VerticalTimelineElement, [{\n    key: 'onVisibilitySensorChange',\n    value: function onVisibilitySensorChange(isVisible) {\n      if (isVisible) {\n        this.setState({ visible: true });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          id = _props.id,\n          children = _props.children,\n          icon = _props.icon,\n          iconStyle = _props.iconStyle,\n          iconOnClick = _props.iconOnClick,\n          date = _props.date,\n          position = _props.position,\n          style = _props.style,\n          className = _props.className,\n          visibilitySensorProps = _props.visibilitySensorProps;\n      var visible = this.state.visible;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          id: id,\n          className: (0, _classnames2.default)(className, 'vertical-timeline-element', {\n            'vertical-timeline-element--left': position === 'left',\n            'vertical-timeline-element--right': position === 'right',\n            'vertical-timeline-element--no-children': children === ''\n          }),\n          style: style\n        },\n        _react2.default.createElement(\n          _reactVisibilitySensor2.default,\n          _extends({}, visibilitySensorProps, {\n            onChange: this.onVisibilitySensorChange\n          }),\n          _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n              'span',\n              { // eslint-disable-line jsx-a11y/no-static-element-interactions\n                style: iconStyle,\n                onClick: iconOnClick,\n                className: 'vertical-timeline-element-icon ' + (visible ? 'bounce-in' : 'is-hidden')\n              },\n              icon\n            ),\n            _react2.default.createElement(\n              'div',\n              {\n                className: 'vertical-timeline-element-content ' + (visible ? 'bounce-in' : 'is-hidden')\n              },\n              children,\n              _react2.default.createElement(\n                'span',\n                { className: 'vertical-timeline-element-date' },\n                date\n              )\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return VerticalTimelineElement;\n}(_react.Component);\n\nVerticalTimelineElement.propTypes = {\n  id: _propTypes2.default.string,\n  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),\n  className: _propTypes2.default.string,\n  icon: _propTypes2.default.element,\n  iconStyle: _propTypes2.default.shape({}),\n  iconOnClick: _propTypes2.default.func,\n  style: _propTypes2.default.shape({}),\n  date: _propTypes2.default.node,\n  position: _propTypes2.default.string,\n  visibilitySensorProps: _propTypes2.default.shape({})\n};\n\nVerticalTimelineElement.defaultProps = {\n  id: '',\n  children: '',\n  className: '',\n  icon: null,\n  iconStyle: null,\n  style: null,\n  date: '',\n  position: '',\n  iconOnClick: null,\n  visibilitySensorProps: { partialVisibility: true, offset: { bottom: 80 } }\n};\n\nexports.default = VerticalTimelineElement;","'use strict';\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar PropTypes = require('prop-types');\nvar createReactClass = require('create-react-class');\nvar isVisibleWithOffset = require('./lib/is-visible-with-offset')\n\nvar containmentPropType = PropTypes.any;\n\nif (typeof window !== 'undefined') {\n  containmentPropType = PropTypes.instanceOf(window.Element);\n}\n\nfunction throttle (callback, limit) {\n    var wait = false;\n    return function () {\n        if (!wait) {\n            wait = true;\n            setTimeout(function () {\n                callback();\n                wait = false;\n            }, limit);\n        }\n    }\n}\n\nfunction debounce(func, wait) {\n  var timeout;\n  return function() {\n    var context = this, args = arguments;\n    var later = function() {\n      timeout = null;\n      func.apply(context, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\nfunction normalizeRect (rect) {\n  if (rect.width === undefined) {\n    rect.width = rect.right - rect.left;\n  }\n\n  if (rect.height === undefined) {\n    rect.height = rect.bottom - rect.top;\n  }\n\n  return rect;\n}\n\nmodule.exports = createReactClass({\n  displayName: 'VisibilitySensor',\n\n  propTypes: {\n    onChange: PropTypes.func,\n    active: PropTypes.bool,\n    partialVisibility: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n    ]),\n    delayedCall: PropTypes.bool,\n    offset: PropTypes.oneOfType([\n      PropTypes.shape({\n        top: PropTypes.number,\n        left: PropTypes.number,\n        bottom: PropTypes.number,\n        right: PropTypes.number\n      }),\n      // deprecated offset property\n      PropTypes.shape({\n        direction: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n        value: PropTypes.number\n      })\n    ]),\n    scrollCheck: PropTypes.bool,\n    scrollDelay: PropTypes.number,\n    scrollThrottle: PropTypes.number,\n    resizeCheck: PropTypes.bool,\n    resizeDelay: PropTypes.number,\n    resizeThrottle: PropTypes.number,\n    intervalCheck: PropTypes.bool,\n    intervalDelay: PropTypes.number,\n    containment: containmentPropType,\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.func,\n    ]),\n    minTopValue: PropTypes.number,\n  },\n\n  getDefaultProps: function () {\n    return {\n      active: true,\n      partialVisibility: false,\n      minTopValue: 0,\n      scrollCheck: false,\n      scrollDelay: 250,\n      scrollThrottle: -1,\n      resizeCheck: false,\n      resizeDelay: 250,\n      resizeThrottle: -1,\n      intervalCheck: true,\n      intervalDelay: 100,\n      delayedCall: false,\n      offset: {},\n      containment: null,\n      children: React.createElement('span')\n    };\n  },\n\n  getInitialState: function () {\n    return {\n      isVisible: null,\n      visibilityRect: {}\n    };\n  },\n\n  componentDidMount: function () {\n    this.node = ReactDOM.findDOMNode(this);\n    if (this.props.active) {\n      this.startWatching();\n    }\n  },\n\n  componentWillUnmount: function () {\n    this.stopWatching();\n  },\n\n  componentDidUpdate: function(prevProps) {\n    // re-register node in componentDidUpdate if children diffs [#103]\n    this.node = ReactDOM.findDOMNode(this);\n\n    if (this.props.active && !prevProps.active) {\n      this.setState(this.getInitialState());\n      this.startWatching();\n    } else if (!this.props.active) {\n      this.stopWatching();\n    }\n  },\n\n  getContainer: function () {\n    return this.props.containment || window;\n  },\n\n  addEventListener: function (target, event, delay, throttle) {\n    if (!this.debounceCheck) {\n      this.debounceCheck = {};\n    }\n\n    var timeout;\n    var func;\n\n    var later = function () {\n      timeout = null;\n      this.check();\n    }.bind(this);\n\n    if (throttle > -1) {\n      func = function () {\n        if (!timeout) {\n          timeout = setTimeout(later, throttle || 0);\n        }\n      };\n    } else {\n      func = function () {\n        clearTimeout(timeout);\n        timeout = setTimeout(later, delay || 0);\n      };\n    }\n\n    var info = {\n      target: target,\n      fn: func,\n      getLastTimeout: function () {\n        return timeout;\n      },\n    };\n\n    target.addEventListener(event, info.fn);\n    this.debounceCheck[event] = info;\n  },\n\n  startWatching: function () {\n    if (this.debounceCheck || this.interval) { return; }\n\n    if (this.props.intervalCheck) {\n      this.interval = setInterval(this.check, this.props.intervalDelay);\n    }\n\n    if (this.props.scrollCheck) {\n      this.addEventListener(\n        this.getContainer(),\n        'scroll',\n        this.props.scrollDelay,\n        this.props.scrollThrottle\n      );\n    }\n\n    if (this.props.resizeCheck) {\n      this.addEventListener(\n        window,\n        'resize',\n        this.props.resizeDelay,\n        this.props.resizeThrottle\n      );\n    }\n\n    // if dont need delayed call, check on load ( before the first interval fires )\n    !this.props.delayedCall && this.check();\n  },\n\n  stopWatching: function () {\n    if (this.debounceCheck) {\n      // clean up event listeners and their debounce callers\n      for (var debounceEvent in this.debounceCheck) {\n        if (this.debounceCheck.hasOwnProperty(debounceEvent)) {\n          var debounceInfo = this.debounceCheck[debounceEvent];\n\n          clearTimeout(debounceInfo.getLastTimeout());\n          debounceInfo.target.removeEventListener(\n            debounceEvent, debounceInfo.fn\n          );\n\n          this.debounceCheck[debounceEvent] = null;\n        }\n      }\n    }\n    this.debounceCheck = null;\n\n    if (this.interval) { this.interval = clearInterval(this.interval); }\n  },\n\n  roundRectDown: function (rect) {\n    return {\n      top: Math.floor(rect.top),\n      left: Math.floor(rect.left),\n      bottom: Math.floor(rect.bottom),\n      right: Math.floor(rect.right),\n    };\n  },\n\n  /**\n   * Check if the element is within the visible viewport\n   */\n  check: function () {\n    var el = this.node;\n    var rect;\n    var containmentRect;\n    // if the component has rendered to null, dont update visibility\n    if (!el) {\n      return this.state;\n    }\n\n    rect = normalizeRect(this.roundRectDown(el.getBoundingClientRect()));\n\n    if (this.props.containment) {\n      var containmentDOMRect = this.props.containment.getBoundingClientRect();\n      containmentRect = {\n        top: containmentDOMRect.top,\n        left: containmentDOMRect.left,\n        bottom: containmentDOMRect.bottom,\n        right: containmentDOMRect.right,\n      }\n    } else {\n      containmentRect = {\n        top: 0,\n        left: 0,\n        bottom: window.innerHeight || document.documentElement.clientHeight,\n        right: window.innerWidth || document.documentElement.clientWidth\n      };\n    }\n\n    // Check if visibility is wanted via offset?\n    var offset = this.props.offset || {};\n    var hasValidOffset = typeof offset === 'object';\n    if (hasValidOffset) {\n      containmentRect.top += offset.top || 0;\n      containmentRect.left += offset.left || 0;\n      containmentRect.bottom -= offset.bottom || 0;\n      containmentRect.right -= offset.right || 0;\n    }\n\n    var visibilityRect = {\n      top: rect.top >= containmentRect.top,\n      left: rect.left >= containmentRect.left,\n      bottom: rect.bottom <= containmentRect.bottom,\n      right: rect.right <= containmentRect.right\n    };\n\n    var hasSize = rect.height > 0 && rect.width > 0;\n\n    var isVisible = (\n      hasSize &&\n      visibilityRect.top &&\n      visibilityRect.left &&\n      visibilityRect.bottom &&\n      visibilityRect.right\n    );\n\n    // check for partial visibility\n    if (hasSize && this.props.partialVisibility) {\n      var partialVisible =\n          rect.top <= containmentRect.bottom && rect.bottom >= containmentRect.top &&\n          rect.left <= containmentRect.right && rect.right >= containmentRect.left;\n\n      // account for partial visibility on a single edge\n      if (typeof this.props.partialVisibility === 'string') {\n        partialVisible = visibilityRect[this.props.partialVisibility]\n      }\n\n      // if we have minimum top visibility set by props, lets check, if it meets the passed value\n      // so if for instance element is at least 200px in viewport, then show it.\n      isVisible = this.props.minTopValue\n        ? partialVisible && rect.top <= (containmentRect.bottom - this.props.minTopValue)\n        : partialVisible\n    }\n\n    // Deprecated options for calculating offset.\n    if (typeof offset.direction === 'string' &&\n        typeof offset.value === 'number') {\n      console.warn('[notice] offset.direction and offset.value have been deprecated. They still work for now, but will be removed in next major version. Please upgrade to the new syntax: { %s: %d }', offset.direction, offset.value)\n\n      isVisible = isVisibleWithOffset(offset, rect, containmentRect);\n    }\n\n    var state = this.state;\n    // notify the parent when the value changes\n    if (this.state.isVisible !== isVisible) {\n      state = {\n        isVisible: isVisible,\n        visibilityRect: visibilityRect\n      };\n      this.setState(state);\n      if (this.props.onChange) this.props.onChange(isVisible, visibilityRect);\n    }\n\n    return state;\n  },\n\n  render: function () {\n    if (this.props.children instanceof Function) {\n      return this.props.children({\n        isVisible: this.state.isVisible,\n        visibilityRect: this.state.visibilityRect,\n      });\n    }\n    return React.Children.only(this.props.children);\n  }\n});\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar React = require('react');\nvar factory = require('./factory');\n\nif (typeof React === 'undefined') {\n  throw Error(\n    'create-react-class could not find the React object. If you are using script tags, ' +\n      'make sure that React is being loaded before create-react-class.'\n  );\n}\n\n// Hack to grab NoopUpdateQueue from isomorphic React\nvar ReactNoopUpdateQueue = new React.Component().updater;\n\nmodule.exports = factory(\n  React.Component,\n  React.isValidElement,\n  ReactNoopUpdateQueue\n);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar _invariant = require('fbjs/lib/invariant');\n\nif (process.env.NODE_ENV !== 'production') {\n  var warning = require('fbjs/lib/warning');\n}\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n\n  var injectedMixins = [];\n\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n  var ReactClassInterface = {\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillMount`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillReceiveProps`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillUpdate`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillUpdate: 'DEFINE_MANY',\n\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n  };\n\n  /**\n   * Similar to ReactClassInterface but for static methods.\n   */\n  var ReactClassStaticInterface = {\n    /**\n     * This method is invoked after a component is instantiated and when it\n     * receives new props. Return an object to update state in response to\n     * prop changes. Return null to indicate no change to state.\n     *\n     * If an object is returned, its keys will be merged into the existing state.\n     *\n     * @return {object || null}\n     * @optional\n     */\n    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'\n  };\n\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n  var RESERVED_SPEC_KEYS = {\n    displayName: function(Constructor, displayName) {\n      Constructor.displayName = displayName;\n    },\n    mixins: function(Constructor, mixins) {\n      if (mixins) {\n        for (var i = 0; i < mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function(Constructor, childContextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, childContextTypes, 'childContext');\n      }\n      Constructor.childContextTypes = _assign(\n        {},\n        Constructor.childContextTypes,\n        childContextTypes\n      );\n    },\n    contextTypes: function(Constructor, contextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, contextTypes, 'context');\n      }\n      Constructor.contextTypes = _assign(\n        {},\n        Constructor.contextTypes,\n        contextTypes\n      );\n    },\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function(Constructor, getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(\n          Constructor.getDefaultProps,\n          getDefaultProps\n        );\n      } else {\n        Constructor.getDefaultProps = getDefaultProps;\n      }\n    },\n    propTypes: function(Constructor, propTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, propTypes, 'prop');\n      }\n      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n    },\n    statics: function(Constructor, statics) {\n      mixStaticSpecIntoComponent(Constructor, statics);\n    },\n    autobind: function() {}\n  };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            typeof typeDef[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n              'React.PropTypes.',\n            Constructor.displayName || 'ReactClass',\n            ReactPropTypeLocationNames[location],\n            propName\n          );\n        }\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n      ? ReactClassInterface[name]\n      : null;\n\n    // Disallow overriding of base class methods unless explicitly allowed.\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(\n        specPolicy === 'OVERRIDE_BASE',\n        'ReactClassInterface: You are attempting to override ' +\n          '`%s` from your class specification. Ensure that your method names ' +\n          'do not overlap with React methods.',\n        name\n      );\n    }\n\n    // Disallow defining methods more than once unless explicitly allowed.\n    if (isAlreadyDefined) {\n      _invariant(\n        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n        'ReactClassInterface: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be due ' +\n          'to a mixin.',\n        name\n      );\n    }\n  }\n\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (process.env.NODE_ENV !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            isMixinValid,\n            \"%s: You're attempting to include a mixin that is either null \" +\n              'or not an object. Check the mixins included by the component, ' +\n              'as well as any mixins they include themselves. ' +\n              'Expected object but got %s.',\n            Constructor.displayName || 'ReactClass',\n            spec === null ? null : typeofSpec\n          );\n        }\n      }\n\n      return;\n    }\n\n    _invariant(\n      typeof spec !== 'function',\n      \"ReactClass: You're attempting to \" +\n        'use a component class or function as a mixin. Instead, just use a ' +\n        'regular object.'\n    );\n    _invariant(\n      !isValidElement(spec),\n      \"ReactClass: You're attempting to \" +\n        'use a component as a mixin. Instead, just use a regular object.'\n    );\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs;\n\n    // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind =\n          isFunction &&\n          !isReactClassMethod &&\n          !isAlreadyDefined &&\n          spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name];\n\n            // These cases should already be caught by validateMethodOverride.\n            _invariant(\n              isReactClassMethod &&\n                (specPolicy === 'DEFINE_MANY_MERGED' ||\n                  specPolicy === 'DEFINE_MANY'),\n              'ReactClass: Unexpected spec policy %s for key %s ' +\n                'when mixing in component specs.',\n              specPolicy,\n              name\n            );\n\n            // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n            if (process.env.NODE_ENV !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n\n    for (var name in statics) {\n      var property = statics[name];\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = name in RESERVED_SPEC_KEYS;\n      _invariant(\n        !isReserved,\n        'ReactClass: You are attempting to define a reserved ' +\n          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n          'as an instance property instead; it will still be accessible on the ' +\n          'constructor.',\n        name\n      );\n\n      var isAlreadyDefined = name in Constructor;\n      if (isAlreadyDefined) {\n        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)\n          ? ReactClassStaticInterface[name]\n          : null;\n\n        _invariant(\n          specPolicy === 'DEFINE_MANY_MERGED',\n          'ReactClass: You are attempting to define ' +\n            '`%s` on your component more than once. This conflict may be ' +\n            'due to a mixin.',\n          name\n        );\n\n        Constructor[name] = createMergedResultFunction(Constructor[name], property);\n\n        return;\n      }\n\n      Constructor[name] = property;\n    }\n  }\n\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(\n      one && two && typeof one === 'object' && typeof two === 'object',\n      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n    );\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(\n          one[key] === undefined,\n          'mergeIntoWithNoDuplicateKeys(): ' +\n            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n            'may be due to a mixin; in particular, this may be caused by two ' +\n            'getInitialState() or getDefaultProps() methods returning objects ' +\n            'with clashing keys.',\n          key\n        );\n        one[key] = two[key];\n      }\n    }\n    return one;\n  }\n\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n    if (process.env.NODE_ENV !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n      boundMethod.bind = function(newThis) {\n        for (\n          var _len = arguments.length,\n            args = Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n        if (newThis !== component && newThis !== null) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): React component methods may only be bound to the ' +\n                'component instance. See %s',\n              componentName\n            );\n          }\n        } else if (!args.length) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): You are binding a component method to the component. ' +\n                'React does this for you automatically in a high-performance ' +\n                'way, so you can safely remove this call. See %s',\n              componentName\n            );\n          }\n          return boundMethod;\n        }\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n    return boundMethod;\n  }\n\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedPreMixin = {\n    componentDidMount: function() {\n      this.__isMounted = true;\n    }\n  };\n\n  var IsMountedPostMixin = {\n    componentWillUnmount: function() {\n      this.__isMounted = false;\n    }\n  };\n\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n  var ReactClassMixin = {\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function(newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function() {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this.__didWarnIsMounted,\n          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n            'subscriptions and pending requests in componentWillUnmount to ' +\n            'prevent memory leaks.',\n          (this.constructor && this.constructor.displayName) ||\n            this.name ||\n            'Component'\n        );\n        this.__didWarnIsMounted = true;\n      }\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function() {};\n  _assign(\n    ReactClassComponent.prototype,\n    ReactComponent.prototype,\n    ReactClassMixin\n  );\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function(props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n            'JSX instead. See: https://fb.me/react-legacyfactory'\n        );\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (\n          initialState === undefined &&\n          this.getInitialState._isMockFunction\n        ) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      _invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      );\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n    mixSpecIntoComponent(Constructor, spec);\n    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    );\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.componentWillRecieveProps,\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.UNSAFE_componentWillRecieveProps,\n        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +\n          'Did you mean UNSAFE_componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","// Tell whether the rect is visible, given an offset\n//\n// return: boolean\nmodule.exports = function (offset, rect, containmentRect) {\n  var offsetDir = offset.direction;\n  var offsetVal = offset.value;\n\n  // Rules for checking different kind of offsets. In example if the element is\n  // 90px below viewport and offsetTop is 100, it is considered visible.\n  switch (offsetDir) {\n  case 'top':\n    return ((containmentRect.top + offsetVal) < rect.top) &&\n      (containmentRect.bottom > rect.bottom) &&\n      (containmentRect.left < rect.left) &&\n      (containmentRect.right > rect.right);\n\n  case 'left':\n    return ((containmentRect.left + offsetVal) < rect.left) &&\n      (containmentRect.bottom > rect.bottom) &&\n      (containmentRect.top < rect.top) &&\n      (containmentRect.right > rect.right);\n\n  case 'bottom':\n    return ((containmentRect.bottom - offsetVal) > rect.bottom) &&\n      (containmentRect.left < rect.left) &&\n      (containmentRect.right > rect.right) &&\n      (containmentRect.top < rect.top);\n\n  case 'right':\n    return ((containmentRect.right - offsetVal) > rect.right) &&\n      (containmentRect.left < rect.left) &&\n      (containmentRect.top < rect.top) &&\n      (containmentRect.bottom > rect.bottom);\n  }\n}\n"],"sourceRoot":""}